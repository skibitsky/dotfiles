{:profiles
 {:Default {:default true
         :sim     50
         :delay   100
         :alone   100
         :held    100}}
 :templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"}
; :applications {:binded_apps ["^com\\.apple\\.Safari$", "^com\\.apple\\.finder$", "^com\\.stairways\\.keyboardmaestro\\.editor$"]}
 :input-sources {:en {:language "en"}
                 :lt {:language "lt"}
                 :ru {:language "ru"}}
 :simlayers {:caps_lock-mode {:key :caps_lock}
             :1-mode {:key :1}
             :2-mode {:key :2}
             :3-mode {:key :3}
             :4-mode {:key :4}
             :q-mode {:key :q}
             :w-mode {:key :w}
             :e-mode {:key :e}
             :r-mode {:key :r}
             :t-mode {:key :t}
             :y-mode {:key :y}
             :u-mode {:key :u}
             :i-mode {:key :i}
             :o-mode {:key :o}
             :p-mode {:key :p :condi :en}
             :a-mode {:key :a}
             :s-mode {:key :s}
             :d-mode {:key :d}
             :f-mode {:key :f}
             :g-mode {:key :g}
             :z-mode {:key :z}
             :x-mode {:key :x}
             :c-mode {:key :c}
             :v-mode {:key :v}
             :b-mode {:key :b}
             :n-mode {:key :n}
             :m-mode {:key :m}
             ;:right_command-mode {:key :right_command }
             :spacebar-mode {:key :spacebar}},
 :main [
              {:des "Swap : with ; in English layout"
               :rules [[:#Psemicolon :!Ssemicolon :en]
                 [:!Ssemicolon :semicolon :en]]}
              {:des "Swap : with ; in Lithuanian layout"
               :rules [[:#Psemicolon :!Ssemicolon :lt]
                 [:!Ssemicolon :semicolon :lt]]}
              {:des "§ to ~"
               :rules [[:non_us_backslash :!Sgrave_accent_and_tilde]]}
              {:des "Right ⌘ to ⌘ + ⇥"
               :rules [[:right_command :!Ctab]]}
              {:des "Right Option to Grave accent"
               :rules [[:right_alt :grave_accent_and_tilde]]}
              {:des "capskey",
               :rules [:caps_lock-mode
                 [:open_bracket :!TOopen_bracket]
                 [:close_bracket :!TOclose_bracket]
                 [:quote :!TOquote]
                 [:comma :!TOcomma]
                 [:period :!TOperiod]
                 [:slash :!TOslash]
                 [:a :!TOa]
                 [:b :!TOb]
                 [:c :!TOc]
                 [:d :!TOd]
                 [:e :!TOe]
                 [:f :!TOf]
                 [:g :!TOg]
                 [:h :!TOh]
                 [:i :!TOi]
                 [:j :!TOj]
                 [:k :!TOk]
                 [:l :!TOl]
                 [:m :!TOm]
                 [:n :!TOn]
                 [:o :!TOo]
                 [:p :!TOp]
                 [:q :!TOq]
                 [:r :!TOr]
                 [:s :!TOs]
                 [:t :!TOt]
                 [:u :!TOu]
                 [:v :!TOv]
                 [:w :!TOw]
                 [:x :!TOx]
                 [:y :!TOy]
                 [:z :!TOz]
                 [:1 :!TO1]
                 [:2 :!TO2]
                 [:3 :!TO3]
                 [:4 :!TO4]
                 [:5 :!TO5]
                 [:6 :!TO6]
                 [:7 :!TO7]
                 [:8 :!TO8]
                 [:9 :!TO9]
                 [:0 :!TO0]]}
        {:des "o-mode (open)"
         :rules [:o-mode
                 [:t [:km "open: Telegram"]]
                 [:b [:km "open: Bear"]]
                 [:s [:km "open: Safari"]]
                 [:f [:km "open: Fantastical"]]
                 [:e [:km "open: Email"]]
                 [:m [:km "open: Spotify"]]
                 [:w [:km "open: Things"]]
                 [:j [:km "open: iTerm"]]
                 [:k [:km "open: KM"]]
                 [:g [:km "open: GitHub"]]
                 [:a [:km "open: Alfred"]]
                 [:d [:km "open: Downloads in Finder"]]
                 [:q [:km "open: Slack"]]
                 [:c [:km "open: Timing"]]
                 [:u [:km "open: Grammarly"]]
                 [:r [:km "open: Sublime"]]
                 [:v [:km "open: Dictionary"]]
                 [:1 [:km "open: 1Password"]]
                 [:2 [:km "open: Caprine"]]
                 [:3 [:km "open: Photos"]]
                 [:4 [:km "open: Unity Hub"]]
                 [:period [:km "open: dotfiles in Finder"]]]}
        {:des "skey (essential actions)"
         :rules [:s-mode
                 [:#COSl [:right_arrow]]
                 [:#COSk [:left_arrow]]
                 [:#COSj [:down_arrow]]
                 [:#COSh [:up_arrow]]
                 [:f :!CTOSf] ; Fantastical Mini Window
                 [:m :!CTOm] ; MindNode Quick Entry
                 [:c :!Cdelete_or_backspace] ; ⌘ + ⌫
                 [:i :!CTO9] ; Typinator quick search
                 [:o :!CTO9]]} ; Typinator quick search (again)
        {:des "wkey (text data)"
         :rules [:w-mode
                 ;[:d [:!CTOS0]] ; Dragonglass urls and essentials
                 [:u [:!CTOS9]] ; Personal urls
                 [:p [:!CTOS8]] ; Personal essentials
                 [:e [:!CTOS6]] ; Current Task
                 [:r [:!CTOS7]]]} ; Different urls and essentials
        {:des "ekey (type using KM palettes)"
         :rules [:e-mode
                 [:u [:!CTOSu]] ; Unicode symbols
                 [:r [:!CTOSr]]]} ; Emojis
        {:des "mkey (make)"
         :rules [:m-mode
         								[:z [:!CTOSz]] ; Capture Fullscreen in CleanShot
         								[:x [:!CTOSx]] ; Capture Area in CleanShot
         								[:c [:!CTOSc]] ; Record video in CleanShot
                 [:n [:km "q: new text file"]] ; Open new plain text file
                 [:e [:km "m: new spark email"]] ; New email in Spark
                 [:w [:alfred "new current task" "com.skibitsky.currenttask"]]
                 [:t [:!CT9]]]} ; Add to Typinator
        {:des "pkey (Text snippets)"
         :rules [:p-mode
                 [:q [:!Sd :e :b :u :g :period :!Sl :o :g :!S9 :!S0 :semicolon :left_arrow :left_arrow]] ; Debug.Log(^);
                 [:t [:slash :slash :spacebar :!St :!So :!Sd :!So :!Ssemicolon :spacebar]] ; // TODO: 
                 [:d [:!Sd :r :a :g :o :n :g :l :a :s :s]] ; Dragonglass
                 [:f [:!Sd :i :f :f :e :r :e :n :t]] ; Different
                 [:g [:!Sd :i :f :f :e :r :e :n :t :spacebar :a :g :e :n :c :y]] ; Different agency
                 [:a [:!St :h :a :n :k :s]]]} ; Thanks       
        {:des "dkey (arrows)"
         :rules [:d-mode
                 [:#COSl [:right_arrow]]
                 [:#COSk [:up_arrow]]
                 [:#COSj [:down_arrow]]
                 [:#COSh [:left_arrow]]]}
        {:des "zkey (Trello)"
         :rules [:z-mode
                 [:i [:km "trello: open Setup Ideas"]]
                 [:l [:km "trello: open Learn"]]
                 [:n [:km "trello: open Watch list"]]
                 [:b [:km "trello: open Books"]]
                 [:f [:km "trello: open Focus"]]
                 [:g [:km "trello: open SSG"]]
                 [:j [:km "trello: open Inventions"]]]}
        {:des "ckey (text)"
         :rules [:c-mode
                 [:e [:km "c: search text in DuckDuckGo"]]
                 [:w [:km "c: open as URL"]]
                 [:q [:km "c: execute in iTerm"]]
                 [:s [:!Oleft_arrow :!OSright_arrow]] ; Highlight word
                 [:d [:!Cleft_arrow :!CSright_arrow]] ; Highlight line
                 [:x [:!Oleft_arrow :!Fdelete_or_backspace]] ; Delete word's first char
                 [:m [:!CTOSb]] ; Add selection to Current Task
                 [:n [:!CTOSn]] ; Search selected text in alfred-web-searches
                 [:u [:!CTOSm]]]} ; Selected text actions
        {:des "ikey (Dash)"
         :rules [:i-mode
                 [:u [:alfred "search dash" "com.kapeli.dash.workflow" "unity: "]]
                 [:n [:alfred "search dash" "com.kapeli.dash.workflow" "net: "]]
                 [:a [:alfred "search dash" "com.kapeli.dash.workflow" "as: "]]
                 [:r [:alfred "search dash" "com.kapeli.dash.workflow" "react: "]]
                 [:j [:alfred "search dash" "com.kapeli.dash.workflow" "js: "]]
                 [:w [:alfred "search dash" "com.kapeli.dash.workflow" "web: "]]
                 [:g [:alfred "search dash" "com.kapeli.dash.workflow" "go: "]]
                 [:s [:alfred "search dash" "com.kapeli.dash.workflow" "swift: "]]]}
        {:des "qkey (in-app actions | replacement for ⌃ )"
         :rules [:q-mode
                 [:open_bracket :!Topen_bracket]
                 [:close_bracket :!Tclose_bracket]
                 [:semicolon :!Tsemicolon]
                 [:quote :!Tquote]
                 [:comma :!Tcomma]
                 [:period :!Tperiod]
                 [:slash :!Tslash]
                 [:a :!Ta]
                 [:b :!Tb]
                 [:c :!Tc]
                 [:d :!Td]
                 [:e :!Te]
                 [:f :!Tf]
                 [:g :!Tg]
                 [:h :!Th]
                 [:i :!Ti]
                 [:j :!Tj]
                 [:k :!Tk]
                 [:l :!Tl]
                 [:m :!Tm]
                 [:n :!Tn]
                 [:o :!To]
                 [:p :!Tp]
                 [:r :!Tr]
                 [:s :!Ts]
                 [:t :!Tt]
                 [:u :!Tu]
                 [:v :!Tv]
                 [:w :!Tw]
                 [:x :!Tx]
                 [:y :!Ty]
                 [:z :!Tz]
                 [:1 :!T1]
                 [:2 :!T2]
                 [:3 :!T3]
                 [:4 :!T4]
                 [:5 :!T5]
                 [:6 :!T6]
                 [:7 :!T7]
                 [:8 :!T8]
                 [:9 :!T9]
                 [:0 :!T0]]}
        {:des "akey (Alfred)"
         :rules [:a-mode
                 [:semicolon [:alfred "run" "iansinnott.keyboardmaestro"]]
                 [:k [:alfred "search repos" "me.lachlan.githubjump"]]
                 [:t [:alfred "start timing task" "com.skibitsky.alfred-timing"]]
                 [:j [:alfred "search bear" "com.drgrib.bear"]]
                 [:y [:alfred "search youtube" "net.deanishe.alfred-searchio"]]
                 [:p [:alfred "search repos" "net.deanishe.alfred-git-repos"]]
                 [:m [:alfred "search mindnode" "nikivi.search.content"]]
                 [:n [:alfred "search numbers" "com.skibitsky.filessearch"]]
                 [:i [:alfred "search websites" "nikivi.web.searches"]]
                 [:open_bracket [:alfred "search tldr" "com.alexlafroscia.tldr-alfred-workflow"]]
                 [:period [:alfred "search keynote" "com.skibitsky.filessearch"]]
                 [:l [:alfred "search slack" "com.yannickglt.alfred2.slack"]]
                 [:o [:alfred "iterm" "net.isometry.alfred.tty"]]
                 [:c [:alfred "convert" "net.deanishe.alfred-convert"]]]}]
}